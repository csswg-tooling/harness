<?php
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © 2007 World Wide Web Consortium, 
//  (Massachusetts Institute of Technology, European Research 
//  Consortium for Informatics and Mathematics, Keio 
//  University). All Rights Reserved. 
//  Copyright © 2008 Hewlett-Packard Development Company, L.P. 
// 
//  This work is distributed under the W3C¬ Software License 
//  [1] in the hope that it will be useful, but WITHOUT ANY 
//  WARRANTY; without even the implied warranty of 
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
// 
//  [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231 
//
//////////////////////////////////////////////////////////////////////////////// 

//////////////////////////////////////////////////////////////////////////////// 
//
//  testsuite.php
//
//  Adapted from Mobile Test Harness [1]
//
//    File: harness.php
//      Lines: 103-142
//
//  where herein specific contents provided by the original harness have
//  been adapted for CSS2.1 conformance testing. Separately, controls have
//  been added to allow entering data for user agents other than the one
//  accessing the harness, and the means by which test presentation order
//  is provided have been altered. Separately, the ability to request
//  only those tests in a particular named group has been added.
//
// [1] http://dev.w3.org/cvsweb/2007/mobile-test-harness/
//
//////////////////////////////////////////////////////////////////////////////// 

require_once("./lib_css2.1_harness/class.css_page.phi");
require_once("./lib_css2.1_harness/class.test_suite.phi");
require_once("./lib_css2.1_harness/class.user_agent.phi");
require_once("./lib_css2.1_harness/class.test_groups.phi");
require_once("./lib_css2.1_harness/class.test_cases.phi");

////////////////////////////////////////////////////////////////////////////////
//
//  class testsuite_page
//
//  A class for generating a page for selecting how tests in a particular 
//  test suite will be presented for inspection. The page includes allowing
//  results to be entered for the user agent accessing the harness or for
//  a user provided user agent. The page further includes requesting
//  to see all of the test cases in the suite, only those test cases in a
//  particular named group, or individual cases. Requests can also be made
//  that successive test cases be presented in the order that they are listed
//  or sorted according to how many response have been entered for the user 
//  agent in question.
//
////////////////////////////////////////////////////////////////////////////////
class testsuite_page extends css_page
{  
  ////////////////////////////////////////////////////////////////////////////
  //
  //  Instance variables.
  //
  ////////////////////////////////////////////////////////////////////////////
  var $m_test_suite;
  var $m_test_groups;
  var $m_test_cases;
  var $m_user_agent;

  ////////////////////////////////////////////////////////////////////////////
  //
  //  Constructor.
  //
  //  The URL accessing the page generated by an object of this class must
  //  identify a valid testsuite:
  //
  //    testsuite.php?s=[testsuite]
  //
  //  If no test suite is identified or if the identified test suite is
  //  not valid, then an error is generated.
  //
  //  The URL accessing the page generated by an object of this class may
  //  also identify an alternate user agent for which data is to be entered:
  //
  //     testsuite.php?s=[testsuite]&u=[id]
  //     testsuite.php?s=[testsuite]&u=[user-agent string]
  //
  //  If no alternate user agent is identified or if the identified user
  //  agent is not valid, then the user agent string of the browser accessing
  //  the harness is used.
  //
  //  All other URL parameters are ignored.
  //
  ////////////////////////////////////////////////////////////////////////////
  function testsuite_page() 
  {
    parent::css_page();

    if(isset($_GET['s'])) {
      $this->m_test_suite = new test_suite($_GET['s']);
    } else {
      $msg = 'No test suite identified.';
      $this->trigger_client_error($msg, E_USER_ERROR);
    }

    $this->m_page_title = $this->m_test_suite->get_title() . 
      ' CSS 2.1 Test Suite';
    
    $this->m_content_title = $this->m_test_suite->get_title() . 
      ' Test Suite for CSS 2.1 Conformance Testing';

    if(isset($_GET['u'])) {
      $this->m_user_agent = new user_agent($_GET['u']);
    } else {
      $this->m_user_agent = new user_agent();
    }

    $this->m_test_groups = new test_groups(
      $this->m_test_suite->get_name());

    $this->m_test_cases = new test_cases(
      $this->m_test_suite->get_name());

    // $this->m_resource_id 
    //   = '$Id: testsuite.php,v 1.2 2008/08/12 18:40:45 dberfang Exp $';    
  }  
  
  ////////////////////////////////////////////////////////////////////////////
  //
  // write_body_content()
  //
  ////////////////////////////////////////////////////////////////////////////
	function write_body_content($indent = '') {
		?>
			<p>Thank you for offering to contribute results for the support of CSS2.1 conformance testing.</p>
			<!--
			<?php if(isset($_GET['u'])): ?>
				<p>You have provided the user-agent string shown below.  This string indicates that the browser for which you wish to provide data is <?php echo $this->m_user_agent->write($indent) ?>.</p>
			<?php else: ?>
				<p>Your browser has been identified by the user-agent string shown below.  This string indicates that your browser is <?php echo $this->m_user_agent->write($indent) ?>; however, you can provide results for a different browser by providing another user-agent string.</p>
			<?php endif; ?>
			-->
			<p>Your user-agent string is shown below:</p>
			<pre><?php echo $this->m_user_agent->get_ua_string() ?></pre>
			<p>The <?php echo $this->m_test_suite->get_title() ?> test suite contains <?php echo $this->m_test_cases->get_count() ?> test cases.
			You can stop running tests at any time without causing trouble.

      <p>You can choose to conduct:</p>
			<ul>
				<li>
					<form action=testcase method=get><strong>
						<input type=hidden name=s value="<?php echo $this->m_test_suite->get_name() ?>">
						<input type=hidden name=u value="<?php echo $this->m_user_agent->get_id() ?>">
						Run the full test suite
						<select name=o>
							<option selected value=1>with least tested cases first</option>
							<option value=0>in order</option>
						</select>
						<input type=submit value="Start"></strong>
					</form>
				</li>
<?php        
        if (0 < $this->m_test_groups->get_count()) {
?>        
				<li>
					<form action=testcase method=get>
						<input type=hidden name=s value="<?php echo $this->m_test_suite->get_name() ?>">
						<input type=hidden name=u value="<?php echo $this->m_user_agent->get_id() ?>">
						A group of test cases: <?php $this->m_test_groups->write($indent) ?>
						<select name=o>
							<option selected value=1>with least tested cases first</option>
							<option value=0>in order</option>
						</select>
						<input type=submit value="Start">
					</form>
				</li>
<?php   
        }
?>
				<li>
					<form action=testcase method=get>
						<input type=hidden name=s value="<?php echo $this->m_test_suite->get_name() ?>">
						<input type=hidden name=u value="<?php echo $this->m_user_agent->get_id() ?>">
						A single test case: <?php echo $this->m_test_cases->write($indent) ?>
						<input type=submit value="Start">
					</form>
				</li>
			</ul>
			<p><strong>Note:</strong> The harness adds automatically in each test case
				the number of remaining test cases and a form to submit results; these
				additions are not part of the original test cases, and their influence
				one the results should be ignored as much as possible.  If you would like
				to see a particular test case without these additions, a link is
				provided to open the test case in a separate window.  In case of doubt,
				please hit the "Cannot Tell" button.
			</p>
		<?php
	}
}

$page = new testsuite_page();
$page -> write();

?>
